# cmake -S ./ -B Debug -G"Unix Makefiles" -DCMAKE_BUILD_TYPE=Debug
# -CMAKE_EXPORT_COMPILE_COMMANDS=1

# make -C Debug VERBOSE=1 -j

cmake_minimum_required(VERSION 3.20)
set(PROJECT_NAME "mosquito-drone")

set(CMAKE_EXECUTABLE_SUFFIX ".elf")
set(LINKER_SCRIPT "../STM32F103C8TX_FLASH.ld")
set(MCPU "-mcpu=Cortex-M3")
set(MFLOAT_ABI "-mfloat-abi=soft")
set(RUNTIME_LIBRARY "--specs=nano.specs")
set(RUNTIME_LIBRARY_SYSCALLS "--specs=rdimon.specs") # rdimon for semihosting,
                                                     # nosys otherwise

# CONFIGURING TO MCU
set(TOOLCHAIN "arm-none-eabi-")
set(CMAKE_C_COMPILER "${TOOLCHAIN}gcc")
set(CMAKE_ASM_COMPILER "${TOOLCHAIN}gcc")
set(CMAKE_AR "${TOOLCHAIN}ar")
set(CMAKE_LINKER "${TOOLCHAIN}ld")
set(CMAKE_OBJCOPY "${TOOLCHAIN}objcopy")
set(CMAKE_RANLIB "${TOOLCHAIN}ranlib")
set(CMAKE_SIZE "${TOOLCHAIN}size")
set(CMAKE_STRIP "${TOOLCHAIN}ld")

set(CMAKE_SYSTEM_PROCESSOR
    "arm"
    CACHE STRING "")
set(CMAKE_SYSTEM_NAME
    "Generic"
    CACHE STRING "")

set(CMAKE_TRY_COMPILE_TARGET_TYPE STATIC_LIBRARY)
set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)

# The good stuff
file(GLOB C_SOURCE_FILES "${CMAKE_SOURCE_DIR}/src/*.c")
set(SOURCES Startup/startup_stm32f103c8tx.s ${C_SOURCE_FILES})

set(COMPILER_DEFINES DEBUG)

project(${PROJECT_NAME})
enable_language(ASM)

add_executable(${PROJECT_NAME} ${SOURCES})
# Cool command from STM32's autogenerated cmake files
add_custom_command(
  TARGET ${CMAKE_PROJECT_NAME}
  POST_BUILD
  COMMAND ${CMAKE_SIZE} $<TARGET_FILE:${CMAKE_PROJECT_NAME}>)

add_compile_definitions(${COMPILER_DEFINES})
target_include_directories(${PROJECT_NAME} PRIVATE ${CMAKE_SOURCE_DIR}/include)
# CMSIS header are relative
target_include_directories(${PROJECT_NAME}
                           PRIVATE ${CMAKE_SOURCE_DIR}/include/CMSIS/Include)
target_include_directories(
  ${PROJECT_NAME}
  PRIVATE ${CMAKE_SOURCE_DIR}/include/CMSIS/Device/ST/STM32F1xx/Include)

set(CMAKE_C_FLAGS
    "${MCPU} -std=gnu11 ${MFLOAT_ABI} ${RUNTIME_LIBRARY} -g -u _printf_float -mthumb -Wall -Werror -Wpedantic"
)

set(CMAKE_EXE_LINKER_FLAGS
    "-T${LINKER_SCRIPT} ${RUNTIME_LIBRARY_SYSCALLS} -g -lrdimon -Wl,-Map=test.map -Wl,--gc-sections -static -Wl,--start-group -lc -lm -Wl,--end-group"
)

set(CMAKE_ASM_FLAGS "${CMAKE_C_FLAGS} -x assembler-with-cpp")
